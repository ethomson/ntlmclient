{"files":[{"file":"ntlmclient.h","functions":["ntlm_client_options_init","ntlm_client_init","ntlm_client_errmsg","ntlm_client_set_hostname","ntlm_client_set_version","ntlm_client_set_credentials","ntlm_client_set_target","ntlm_client_challenge_nonce","ntlm_client_target","ntlm_client_target_server","ntlm_client_target_domain","ntlm_client_target_server_dns","ntlm_client_target_domain_dns","ntlm_client_reset","ntlm_client_free"],"meta":{},"lines":331}],"functions":{"ntlm_client_options_init":{"type":"function","file":"ntlmclient.h","line":116,"lineto":118,"args":[{"name":"options","type":"ntlm_client_options *","comment":"an allocated `ntlm_client_options` structure"},{"name":"version","type":"unsigned int","comment":"the version of the library to use; this should be\n        specified as `NTLM_CLIENT_OPTIONS_VERSION`."}],"argline":"ntlm_client_options *options, unsigned int version","sig":"ntlm_client_options *::unsigned int","return":{"type":"void","comment":null},"description":"<p>Initializes an <code>ntlm_client_options</code> structure with the default values.\n Equivalent to creating an instance with <code>NTLM_CLIENT_OPTIONS_INIT</code>.</p>\n","comments":"","group":"options"},"ntlm_client_init":{"type":"function","file":"ntlmclient.h","line":127,"lineto":127,"args":[{"name":"options","type":"ntlm_client_options *","comment":"the `ntlm_client_options` to use for negotiation."}],"argline":"ntlm_client_options *options","sig":"ntlm_client_options *","return":{"type":"ntlm_client *","comment":" the `ntlm_client` context, or `NULL` if out-of-memory."},"description":"<p>Initializes an <code>ntlm_client</code> context, which can begin sending\n and receiving NTLM authentication messages.</p>\n","comments":"","group":"ntlmclient"},"ntlm_client_errmsg":{"type":"function","file":"ntlmclient.h","line":137,"lineto":137,"args":[{"name":"ntlm","type":"ntlm_client *","comment":null}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" a constant string containing the error message."},"description":"<p>Gets the error message for the most recent error that occurred.  If\n a function returns an error, more details can be retrieved with this\n function.  The string returned is a constant string; it should not\n be freed.</p>\n","comments":"","group":"ntlmclient"},"ntlm_client_set_hostname":{"type":"function","file":"ntlmclient.h","line":149,"lineto":152,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to configure"},{"name":"hostname","type":"const char *","comment":"the hostname of the local machine"},{"name":"domain","type":"const char *","comment":"the domain of the local machine"}],"argline":"ntlm_client *ntlm, const char *hostname, const char *domain","sig":"ntlm_client *::const char *::const char *","return":{"type":"int","comment":" 0 on success, non-zero on failure"},"description":"<p>Sets the local hostname and domain.  These strings should be in\n ASCII.  They will be provided to the remote host during the\n negotiation phase.</p>\n","comments":"","group":"set"},"ntlm_client_set_version":{"type":"function","file":"ntlmclient.h","line":168,"lineto":172,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to configure"},{"name":"major","type":"uint8_t","comment":"the major version number of the local operating system"},{"name":"minor","type":"uint8_t","comment":"the minor version number of the local operating system"},{"name":"build","type":"uint16_t","comment":"the build number of the local operating system"}],"argline":"ntlm_client *ntlm, uint8_t major, uint8_t minor, uint16_t build","sig":"ntlm_client *::uint8_t::uint8_t::uint16_t","return":{"type":"int","comment":" 0 on success, non-zero on failure"},"description":"<p>Sets the local operating system version.  These numbers are expected\n to correspond to Windows operating system versions; for example\n major version 6, minor version 2, build 9200 would correspond to\n Windows 8 (aka &quot;NT 6.2&quot;).</p>\n","comments":"<p>It is not likely that you need to set the local version.</p>\n","group":"set"},"ntlm_client_set_credentials":{"type":"function","file":"ntlmclient.h","line":187,"lineto":191,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to configure"},{"name":"username","type":"const char *","comment":"the username to authenticate with"},{"name":"domain","type":"const char *","comment":"the domain of the user authenticating"},{"name":"password","type":"const char *","comment":"the password to authenticate with"}],"argline":"ntlm_client *ntlm, const char *username, const char *domain, const char *password","sig":"ntlm_client *::const char *::const char *::const char *","return":{"type":"int","comment":" 0 on success, non-zero on failure"},"description":"<p>Sets the username and password to authenticate with to the remote\n host.  Username and password may be specified in UTF-8 but the\n domain should be in ASCII.  These will not be sent to the remote host\n but will instead be used to compute the LM, NTLM or NTLM2 responses,\n which will be provided to the remote host during the response phase.</p>\n","comments":"","group":"set"},"ntlm_client_set_target":{"type":"function","file":"ntlmclient.h","line":202,"lineto":204,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to configure"},{"name":"target","type":"const char *","comment":"the name of the authentication target"}],"argline":"ntlm_client *ntlm, const char *target","sig":"ntlm_client *::const char *","return":{"type":"int","comment":" 0 on success, non-zero on failure"},"description":"<p>Sets the authentication target, your idea of the remote host&#39;s\n name.  The target should be provided as ASCII.  It will be\n provided to the remote host during the response phase.</p>\n","comments":"","group":"set"},"ntlm_client_challenge_nonce":{"type":"function","file":"ntlmclient.h","line":214,"lineto":215,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"uint64_t","comment":" the challenge from the remote host"},"description":"<p>Gets the remote host&#39;s nonce, as it was provided in the challenge\n message.  This is an opaque 8 byte value that is used to compute\n the LM, NTLM and NTLM2 responses.</p>\n","comments":"","group":"challenge"},"ntlm_client_target":{"type":"function","file":"ntlmclient.h","line":225,"lineto":225,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" the remote host's target name"},"description":"<p>Gets the remote hosts&#39;s target name, which can be used as the\n authentication target.  This will be given as it was provided\n in the challenge message.</p>\n","comments":"","group":"ntlmclient"},"ntlm_client_target_server":{"type":"function","file":"ntlmclient.h","line":234,"lineto":234,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" the remote host's server name"},"description":"<p>Gets the remote hosts&#39;s name, which is generally its short name.\n This will be given as it was provided in the challenge message.</p>\n","comments":"","group":"target"},"ntlm_client_target_domain":{"type":"function","file":"ntlmclient.h","line":244,"lineto":244,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" the remote host's domain"},"description":"<p>Gets the remote hosts&#39;s domain, which is generally the short or\n NT-style domain name.  This will be given as it was provided in\n the challenge message.</p>\n","comments":"","group":"target"},"ntlm_client_target_server_dns":{"type":"function","file":"ntlmclient.h","line":254,"lineto":254,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" the remote host's DNS name"},"description":"<p>Gets the remote hosts&#39;s DNS name, which is generally the long-style\n Active Directory or fully-qualified hostname.  This will be given\n as it was provided in the challenge message.</p>\n","comments":"","group":"target"},"ntlm_client_target_domain_dns":{"type":"function","file":"ntlmclient.h","line":264,"lineto":264,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to query"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"const char *","comment":" the remote host's DNS domain"},"description":"<p>Gets the remote hosts&#39;s DNS domain, which is generally the long-style\n Active Directory or fully-qualified domain name.  This will be given\n as it was provided in the challenge message.</p>\n","comments":"","group":"target"},"ntlm_client_reset":{"type":"function","file":"ntlmclient.h","line":323,"lineto":323,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to reset"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"void","comment":null},"description":"<p>Resets an <code>ntlm_client</code> context completely, so that authentication\n may be retried.  You must set <em>all</em> parameters again, including the\n target, username, password, etc.  Once these values are configured\n again, the negotiation can begin.</p>\n","comments":"","group":"ntlmclient"},"ntlm_client_free":{"type":"function","file":"ntlmclient.h","line":331,"lineto":331,"args":[{"name":"ntlm","type":"ntlm_client *","comment":"the `ntlm_client` context to free"}],"argline":"ntlm_client *ntlm","sig":"ntlm_client *","return":{"type":"void","comment":null},"description":"<p>Frees an <code>ntlm_client</code> context.  This should be done to free memory\n belonging to the context.  The context cannot be reused.</p>\n","comments":"","group":"ntlmclient"}},"callbacks":{},"globals":{},"types":[["ntlm_client_options",{"decl":["unsigned int version","ntlm_client_flag_t flags"],"type":"struct","value":"ntlm_client_options","file":"ntlmclient.h","line":82,"lineto":91,"block":"unsigned int version\nntlm_client_flag_t flags","tdef":"typedef","description":" Options for initializing an `ntlm_client` context.  You can initialize\n this using the `NTLM_CLIENT_OPTIONS_INIT` macro, or by calling\n `ntlm_client_options_init`.","comments":"","fields":[{"type":"unsigned int","name":"version","comments":" Version of the options structure to use.  This should be set to\n `NTLM_CLIENT_OPTIONS_VERSION`."},{"type":"ntlm_client_flag_t","name":"flags","comments":" Flags for negotiation; see `ntlm_client_flag_t` above. "}],"used":{"returns":[],"needs":["ntlm_client_init","ntlm_client_options_init"]}}]],"prefix":"include","groups":[["challenge",["ntlm_client_challenge_nonce"]],["ntlmclient",["ntlm_client_errmsg","ntlm_client_free","ntlm_client_init","ntlm_client_reset","ntlm_client_target"]],["options",["ntlm_client_options_init"]],["set",["ntlm_client_set_credentials","ntlm_client_set_hostname","ntlm_client_set_target","ntlm_client_set_version"]],["target",["ntlm_client_target_domain","ntlm_client_target_domain_dns","ntlm_client_target_server","ntlm_client_target_server_dns"]]]}